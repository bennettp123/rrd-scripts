#!/usr/bin/perl
use Fcntl qw(LOCK_EX LOCK_NB);
use Fcntl qw(:flock);

# Try to get an exclusive lock on myself.
unless (flock(DATA, LOCK_EX|LOCK_NB)) {
	die "$0 is already running!\n"
}

use RRDs;
use File::HomeDir;

# define location of rrdtool databases
my $rrd = File::HomeDir->my_home . '/.rrd/db/uptime.rrd';
# define location of images
my $img = File::HomeDir->my_home . '/.rrd/img';

my $uptime_data = '';
open(my $fh, '<', '/proc/uptime') or goto data_error;
{
	local $/;
	$uptime_data = <$fh>;
}
close($fh);
chomp($uptime_data);

my $uptime;
my $idletime;
if($uptime_data =~ /^\s*([\d\.]+)\s+([\d\.]+)/) {
	$uptime = $1;
	$idletime = $2;
} else {
	goto regex_error;
}

# if uptime database doesn't exist, create it
if (! -e "$rrd") {
  RRDs::create "$rrd",
        "-s 60",
	"DS:uptime:GAUGE:120:0:60000",
	"DS:idletime:GAUGE:120:0:60000",
	"RRA:MIN:0.5:1:2880",
	"RRA:MIN:0.5:30:672",
	"RRA:MIN:0.5:120:732",
	"RRA:MIN:0.5:720:1460";
}

RRDs::update "$rrd",
  "-t", "uptime:idletime",
  "N:$uptime:$idletime";


# Generate graphs
CreateGraphs("day");
CreateGraphs("week");
CreateGraphs("month");
CreateGraphs("year");

#------------------------------------------------------------------------------
sub CreateGraphs($){
  my $period = shift;
  
  RRDs::graph "$img/uptime-$period.png",
		"-s -1$period",
		"-t Uptime",
		"-h", "150", "-w", "700",
		"-l 0",
		"-a", "PNG",
		"-v uptime",
		"DEF:uptime_1=$rrd:uptime:MIN",
		"-X 0",
		"--lazy",
		#"DEF:uptime_5=$rrd:uptime_5min:AVERAGE",
		#"DEF:uptime_10=$rrd:uptime_10min:AVERAGE",
		"AREA:uptime_1#00BBEE:Uptime  (1 min)",
		"GPRINT:uptime_1:LAST: Current\\: %0.7lf %S\\n",
		#"LINE2:uptime_5#FF0000:Load Avg  (5 min)",
		#"GPRINT:uptime_5:MAX:  Max\\: %5.1lf %S",
		#"GPRINT:uptime_5:AVERAGE: Avg\\: %5.1lf %S",
		#"GPRINT:uptime_5:LAST: Current\\: %5.1lf %S\\n",
		#"LINE2:uptime_10#0022FF:Load Avg (10 min)",
		#"GPRINT:uptime_10:MAX:  Max\\: %5.1lf %S",
		#"GPRINT:uptime_10:AVERAGE: Avg\\: %5.1lf %S",
		#"GPRINT:uptime_10:LAST: Current\\: %5.1lf %S\\n",
		"HRULE:0#000000";
  if ($ERROR = RRDs::error) { 
    print "$0: unable to generate $period graph: $ERROR\n"; 
  }
}

exit 0;

data_error:
exit 1;

regex_error:
exit 2;

__DATA__
This exists so flock() code above works.
DO NOT REMOVE THIS DATA SECTION
